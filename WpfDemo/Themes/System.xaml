<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:FarsiLibrary.WPF.Controls;assembly=FarsiLibrary.WPF">

    <LinearGradientBrush x:Key="ProgressBarBackground" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#BABABA" />
        <GradientStop Offset="0.5" Color="#C7C7C7" />
        <GradientStop Offset="1" Color="#BABABA" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#B2B2B2" />
        <GradientStop Offset="1" Color="#8C8C8C" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.5385" Color="#50FFFFFF" />
        <GradientStop Offset="0.5385" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarTopHighlight" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.05" Color="#80FFFFFF" />
        <GradientStop Offset="0.25" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" MappingMode="Absolute" StartPoint="-100,0" EndPoint="0,0">
        <GradientStop Offset="0" Color="#00000000" />
        <GradientStop Offset="0.4" Color="#FF000000" />
        <GradientStop Offset="0.6" Color="#FF000000" />
        <GradientStop Offset="1" Color="#00000000" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#0C000000" />
        <GradientStop Offset="0.3" Color="#20000000" />
        <GradientStop Offset="1" Color="#00000000" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#00000000" />
        <GradientStop Offset="0.7" Color="#20000000" />
        <GradientStop Offset="1" Color="#0C000000" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
        <GradientStop Offset="0" Color="#60FFFFC4" />
        <GradientStop Offset="1" Color="#00FFFFC4" />
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Offset="0" Color="#60FFFFC4" />
        <GradientStop Offset="1" Color="#00FFFFC4" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
        <GradientStop Offset="0" Color="#60FFFFC4" />
        <GradientStop Offset="1" Color="#00FFFFC4" />
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.5385" Color="#90FFFFFF" />
        <GradientStop Offset="0.5385" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <!--  ListBox Item Focus Style  -->
    <Style x:Key="ListItemFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               RadiusX="2"
                               RadiusY="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource ControlFocusBorderBrush}"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DialogTextBoxBase Focus Visual Style  -->
    <Style x:Key="ComboBoxFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusX="4"
                               RadiusY="4"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource ControlFocusBorderBrush}"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ButtonBase Focus Visual Style  -->
    <Style x:Key="ButtonBaseFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusX="3"
                               RadiusY="3"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource ControlFocusBorderBrush}"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox Focus Visual Style  -->
    <Style x:Key="CheckBoxFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Width="12"
                               Height="12"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource ControlFocusBorderBrush}"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Scrollbar Buttons  -->
    <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Background="Transparent">
                        <ContentPresenter Name="ContentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Scrollbar Thumbs  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle Width="Auto"
                                   Height="Auto"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="Transparent" />
                        <Rectangle Name="Rectangle1"
                                   Width="7"
                                   Height="Auto"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="4"
                                   RadiusY="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ButtonBase Template and Style  -->
    <Style x:Key="{x:Type ButtonBase}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonDefaultBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonBaseFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="ButtonTemplateGrid"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ContentPresenter x:Name="Content"
                                              Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              RecognizesAccessKey="true" />
                            <Border x:Name="HighlightBackground"
                                    Grid.Row="0"
                                    Margin="1,1,1,0"
                                    Background="{DynamicResource ButtonSelectionGrad}"
                                    CornerRadius="2"
                                    Opacity="0.15"
                                    RenderTransformOrigin="0.5,1" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonMouseOverTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.1" />
                            <Setter TargetName="HighlightBackground" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Buttons  -->
    <Style x:Key="{x:Type Button}"
           BasedOn="{StaticResource {x:Type ButtonBase}}"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonTemplateGrid"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ContentPresenter x:Name="Content"
                                              Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              RecognizesAccessKey="true" />
                            <Border x:Name="HighlightBackground"
                                    Grid.Row="0"
                                    Margin="1,1,1,0"
                                    Background="{DynamicResource ButtonSelectionGrad}"
                                    CornerRadius="2"
                                    Opacity="0.15"
                                    RenderTransformOrigin="0.5,1" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonIsDefaultBorderBrush}" />
                            <Setter Property="BorderThickness" Value="1.5, 1.5, 1.5, 1.5" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Background" Value="{DynamicResource ButtonSelectionGrad}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonDefaultBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonIsFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonMouseOverTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.1" />
                            <Setter TargetName="HighlightBackground" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  RepeatButton  -->
    <Style x:Key="{x:Type RepeatButton}"
           BasedOn="{StaticResource {x:Type ButtonBase}}"
           TargetType="{x:Type RepeatButton}" />

    <!--  MessageBox Button  -->
    <Style x:Key="MessageButton"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="MinHeight" Value="20" />
    </Style>

    <!--  Dialog Button  -->
    <Style x:Key="FXDialogButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#E6E6E6" />
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="Foreground" Value="#595959" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ButtonTemplateGrid"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.593*" />
                                <RowDefinition Height="0.407*" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Name="Content"
                                              Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              RecognizesAccessKey="true" />
                            <Border Name="HighlightBackground"
                                    Grid.Row="0"
                                    Margin="1,1,1,1"
                                    Background="#FFFFFF"
                                    CornerRadius="3"
                                    Opacity="0.5" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#D9D9D9" />
                            <Setter Property="Foreground" Value="#333333" />
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#A6A6A6" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Grip Style  -->
    <Style x:Key="DefaultGripStyle" TargetType="{x:Type Control}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Cursor" Value="SizeNWSE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Width="12"
                          Height="12"
                          Background="Transparent">
                        <Path Margin="-0.5,-0.5,-0.5,-0.5"
                              Data=""
                              Fill="{DynamicResource ButtonOverBrush}"
                              Stretch="Fill" />
                        <Path Width="4"
                              Height="4"
                              Margin="0,0,1.5,1.5"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Bottom"
                              Data=""
                              Fill="{DynamicResource PopUpBrush}"
                              Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultGripStyle}" TargetType="{x:Type ResizeGrip}" />

    <!--  ListBox Item  -->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{DynamicResource RecessedBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="Padding" Value="4,2,4,2" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ListItemFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="ListBoxItemRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ContentPresenter Name="ListBoxItemContent"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource ListSelectionGrad}" />
                <Setter Property="Foreground" Value="{DynamicResource ListSelectedTextBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ListBox Style  -->
    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ScrollViewer CanContentScroll="true"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBars  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrush}}" />
        <Setter Property="Background" Value="{DynamicResource SliderGrad}" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                          Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
                          Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="DecreaseRepeat"
                                      Command="ScrollBar.LineUpCommand"
                                      Foreground="{DynamicResource ButtonDefaultBrush}"
                                      Style="{DynamicResource ScrollButtons}">
                            <Path x:Name="DecreaseArrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                                  Fill="{Binding ElementName=DecreaseRepeat,
                                                 Path=Foreground}" />
                        </RepeatButton>
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               Focusable="false"
                               IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                       Background="{DynamicResource ButtonDefaultBrush}"
                                       Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                              Command="ScrollBar.PageDownCommand"
                                              Focusable="false"
                                              Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                              Command="ScrollBar.PageUpCommand"
                                              Focusable="false"
                                              Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="IncreaseRepeat"
                                      Grid.Row="2"
                                      Command="ScrollBar.LineDownCommand"
                                      Style="{DynamicResource ScrollButtons}">
                            <Path x:Name="IncreaseArrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
                                  Fill="{DynamicResource ButtonDefaultBrush}" />
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="IncreaseRepeat" Property="IsMouseOver" Value="true">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="DecreaseRepeat" Property="IsMouseOver" Value="true">
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                        </Trigger>
                        <Trigger SourceName="IncreaseRepeat" Property="IsPressed" Value="true">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="{DynamicResource DarkBrush}" />
                        </Trigger>
                        <Trigger SourceName="DecreaseRepeat" Property="IsPressed" Value="true">
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="{DynamicResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="{DynamicResource LayerChild1Brush}" />
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="{DynamicResource LayerChild1Brush}" />
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand" />
                            <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollViewer  -->
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="4">
                        <Grid Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Name="ScrollContentPresenter"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Margin="1,0,0,0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Minimum="0"
                                       Orientation="Vertical"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding Path=VerticalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Minimum="0"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{Binding Path=HorizontalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Round ScrollViewer  -->
    <Style x:Key="RoundedScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="4">
                        <Grid Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Name="ScrollContentPresenter"
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Margin="1,0,0,0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Minimum="0"
                                       Orientation="Vertical"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding Path=VerticalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Minimum="0"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{Binding Path=HorizontalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Base TextBox  -->
    <Style x:Key="BaseTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonBaseFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="3"
                            Focusable="false">
                        <DockPanel Margin="0" LastChildFill="True">
                            <Image x:Name="PART_ErrorIcon"
                                   Width="16"
                                   Height="16"
                                   Margin="2,0,2,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   DockPanel.Dock="Right"
                                   Visibility="Collapsed" />
                            <ScrollViewer Name="PART_ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="PART_ErrorIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ErrorIcon" Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="PART_ErrorIcon" Property="DockPanel.Dock" Value="Left" />
                            <!--<Setter Property="Margin" Value="0,0,5,0" TargetName="PART_ErrorIcon" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                <Setter Property="Background" Value="{DynamicResource RecessedBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{DynamicResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Localization.Attributes="Value(Readable Modifiable None)" Property="Foreground" Value="{DynamicResource Text1Brush}" />
                <Setter Localization.Attributes="Value(Readable Modifiable None)" Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  TextBox  -->
    <Style x:Key="{x:Type TextBox}"
           BasedOn="{StaticResource BaseTextBox}"
           TargetType="{x:Type TextBox}" />

    <!--  ComboBox Item  -->
    <Style x:Key="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource {x:Type ComboBoxItem}}"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{DynamicResource RecessedBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="Padding" Value="4,2,4,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="ListBoxItemRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource ListSelectionGrad}" />
                <Setter Property="Foreground" Value="{DynamicResource ListSelectedTextBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ComboBox Button  -->
    <Style x:Key="ComboBoxButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="BorderBrush" Value="{DynamicResource RecessedBrush}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                        </Grid.ColumnDefinitions>
                        <Border Name="ComboBoxButtonBorder"
                                Grid.Column="1"
                                Width="16"
                                Background="{DynamicResource ButtonDefaultBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <Image Name="ComboBoxButtonArrow"
                                   Width="8"
                                   Height="5"
                                   Source="{DynamicResource ComboBoxButtonIcon}"
                                   Stretch="Fill" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="ComboBoxButtonBorder" Property="BorderBrush" Value="{DynamicResource Text1Brush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ComboBoxButtonBorder" Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ComboBoxButtonBorder" Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
                            <Setter TargetName="ComboBoxButtonBorder" Property="Background" Value="{DynamicResource RecessedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox  -->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonBaseFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Name="PART_MainBorder"
                                Background="{TemplateBinding BorderBrush}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <Grid IsSharedSizeScope="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="SelectedItemBorder"
                                        Grid.ColumnSpan="2"
                                        Margin="1"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="2" />
                                <Image x:Name="PART_ErrorIcon"
                                       Width="16"
                                       Height="16"
                                       Margin="2,0,2,0"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="Collapsed" />
                                <ToggleButton x:Name="DropDownButton"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="3"
                                              Margin="0"
                                              Focusable="false"
                                              IsChecked="{Binding Path=IsDropDownOpen,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{DynamicResource ComboBoxButtonStyle}" />
                                <ContentPresenter Name="ContentSite"
                                                  Grid.Column="1"
                                                  Margin="4,2,1,2"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                                <TextBox x:Name="PART_EditableTextBox"
                                         Grid.Column="1"
                                         Height="Auto"
                                         MinHeight="0"
                                         FocusVisualStyle="{DynamicResource ComboBoxFocusVisualStyle}"
                                         Foreground="{TemplateBinding Foreground}"
                                         IsReadOnly="True"
                                         Padding="1,0,0,0"
                                         Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Controls:FXPopup x:Name="PART_Popup"
                                          Focusable="false"
                                          IsOpen="{Binding Path=IsDropDownOpen,
                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                          Placement="Bottom"
                                          PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border Name="DropDownBorder"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="{DynamicResource BackgroundBrush}">
                                <ScrollViewer CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter Margin="1" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Controls:FXPopup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="PART_ErrorIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ErrorIcon" Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="PART_ErrorIcon" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="true" />
                                <Condition Property="IsDropDownOpen" Value="false" />
                                <Condition Property="IsEditable" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource Text1Brush}" />
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{DynamicResource Text1Brush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="SelectedItemBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_MainBorder" Property="Background" Value="{DynamicResource RecessedBrush}" />
                            <Setter Property="Background" Value="{DynamicResource RecessedBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                            <Setter TargetName="DropDownButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="true" />
                    <Condition Property="IsDropDownOpen" Value="false" />
                    <Condition Property="IsEditable" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
            </MultiTrigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Label  -->
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Dialog Text  -->
    <Style x:Key="DialogText" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
    </Style>

    <!--  Dialog HyperLink  -->
    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF808080" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="{DynamicResource IconFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource IconFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource IconFontWeight}" />
        <Setter Property="Foreground" Value="#3399FF" />
    </Style>

    <!--  Radio Button  -->
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource PopUpBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RecessedBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Width="12"
                              Height="12"
                              Margin="0,4,0,0"
                              VerticalAlignment="Top">
                            <Ellipse Name="Ellipse_Border"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="1" />
                            <Ellipse Name="CheckMark"
                                     Width="6"
                                     Height="6"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="Black" />
                        </Grid>
                        <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="true" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse_Border" Property="Stroke" Value="{DynamicResource Text1Brush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource RecessedBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox Style  -->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="Background" Value="{DynamicResource PopUpBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonDefaultBorderBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Width="12"
                                Height="12"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <Path Name="CheckMark"
                                  Width="8"
                                  Height="8"
                                  Margin="0,0,0,0"
                                  Data="{DynamicResource Checkmark}"
                                  Fill="{DynamicResource Text1Brush}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Expander Toggle Button  -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="CheckBox">
        <DockPanel LastChildFill="True" SnapsToDevicePixels="True">
            <Image Name="Arrow"
                   Width="8"
                   Height="8"
                   Margin="4"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   DockPanel.Dock="Right"
                   Source="{DynamicResource PaneExpanderIcon}" />
            <ContentPresenter Name="ContentHeader"
                              Margin="4,4,4,4"
                              Focusable="false"
                              RecognizesAccessKey="true" />
        </DockPanel>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="FlowDirection" Value="RightToLeft" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="270" CenterX="4" CenterY="4" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False" />
                    <Condition Property="FlowDirection" Value="RightToLeft" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" CenterX="4" CenterY="4" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="FlowDirection" Value="LeftToRight" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="4" CenterY="4" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  Expander  -->
    <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PaletteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid Height="{TemplateBinding Height}" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border Name="HeaderBorder"
                                Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="4">
                            <CheckBox Name="HeaderSite"
                                      Margin="4,0,0,0"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      Background="{DynamicResource Text1Brush}"
                                      Content="{TemplateBinding Header}"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsExpanded,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      OverridesDefaultStyle="true"
                                      Template="{DynamicResource ExpanderToggleButton}" />
                        </Border>
                        <Border Name="Content"
                                Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,4,4">
                            <ContentPresenter Name="ContentSite" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content, Path=Height}" />
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="4,4,0,0" />
                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabItem Base  -->
    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource RecessedBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border"
                            Height="{TemplateBinding Height}"
                            Margin="0,0,2,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="3,3,0,0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="ContentSite"
                                          Margin="5,0,5,0"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,3,3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Canvas.ZIndex" Value="100" />
                <Setter Property="Background" Value="{DynamicResource TabSelectionBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="IsSelected" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource PaletteBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Tab Control  -->
    <Style x:Key="BaseTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ButtonDefaultBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid Name="Grid1"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Name="ColumnDefinition1" Width="0px" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto" />
                            <RowDefinition Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel Name="HeaderPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Background="Transparent"
                                  IsItemsHost="true"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0,0,3,3"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="BorderThickness" Value="0,0,0,1" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="BorderThickness" Value="0,0,1,0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabControl Style  -->
    <Style x:Key="{x:Type TabControl}"
           BasedOn="{StaticResource BaseTabControl}"
           TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid Name="Grid1" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="0px" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto" />
                            <RowDefinition Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <UniformGrid Name="HeaderPanel"
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Margin="0,0,-2,0"
                                     Background="Transparent"
                                     IsItemsHost="true"
                                     KeyboardNavigation.TabIndex="1"
                                     Rows="1" />
                        <Border Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0,0,3,3"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="BorderThickness" Value="0,0,0,1" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Auto Hidden Tab Control  -->
    <Style x:Key="AutoHiddenTabControl"
           BasedOn="{StaticResource BaseTabControl}"
           TargetType="{x:Type TabControl}">
        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  StatusBar Separator  -->
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{DynamicResource MenuTextBrush}" SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu Separator  -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{DynamicResource MenuTextBrush}" SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ContextMenu  -->
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Height="Auto"
                            Background="{DynamicResource MenuBackgroundBrush}"
                            BorderBrush="{DynamicResource MenuTextBrush}"
                            BorderThickness="1">
                        <StackPanel Margin="2"
                                    Background="{TemplateBinding Background}"
                                    IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu  -->
    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <StackPanel Background="{TemplateBinding Background}"
                                ClipToBounds="true"
                                IsItemsHost="true"
                                Orientation="Horizontal" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu Items  -->
    <ControlTemplate x:Key="SubmenuHeaderStyle" TargetType="{x:Type MenuItem}">
        <Border Name="Bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <Grid Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="17"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="14" />
                </Grid.ColumnDefinitions>
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      VerticalAlignment="Center"
                      Data="{DynamicResource Checkmark}"
                      Fill="{TemplateBinding Foreground}"
                      Visibility="Hidden" />
                <Controls:FXPopup x:Name="PART_Popup"
                                  Focusable="false"
                                  IsOpen="{Binding Path=IsSubmenuOpen,
                                                   RelativeSource={RelativeSource TemplatedParent,
                                                                                  AncestorType={x:Null}}}"
                                  Placement="Right"
                                  PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimation}}"
                                  VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder"
                            Background="{DynamicResource MenuBackgroundBrush}"
                            BorderBrush="{DynamicResource MenuTextBrush}"
                            BorderThickness="1,1,1,1">
                        <ScrollViewer x:Name="ScrollViewer"
                                      CanContentScroll="true"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                    TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            Margin="2,2,2,2"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </Controls:FXPopup>
                <ContentPresenter x:Name="ContentPresenter"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="Path"
                      Grid.Column="3"
                      Margin="4,0,6,0"
                      VerticalAlignment="Center"
                      Data="{DynamicResource RightArrow}"
                      DockPanel.Dock="Right"
                      Fill="{TemplateBinding Foreground}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource LayerChild1Brush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemTopLevelItemStyle" TargetType="{x:Type MenuItem}">
        <Border Name="Bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <DockPanel Name="DockPanel">
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path Name="GlyphPanel"
                      Margin="4,0,6,0"
                      VerticalAlignment="Center"
                      Data="{DynamicResource Checkmark}"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter Name="ContentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource LayerChild1Brush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemTopLevelHeaderStyle" TargetType="{x:Type MenuItem}">
        <Border x:Name="Bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <DockPanel x:Name="DockPanel">
                <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="GlyphPanel"
                      Margin="4,0,6,0"
                      VerticalAlignment="Center"
                      Data="{DynamicResource Checkmark}"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter x:Name="ContentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding Header}"
                                  ContentSource="Header"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                  RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Controls:FXPopup x:Name="PART_Popup"
                                  Focusable="false"
                                  IsOpen="{Binding Path=IsSubmenuOpen,
                                                   RelativeSource={RelativeSource TemplatedParent,
                                                                                  AncestorType={x:Null}}}"
                                  Placement="Bottom"
                                  PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimation}}">
                    <Border x:Name="SubMenuBorder"
                            Background="{DynamicResource MenuBackgroundBrush}"
                            BorderBrush="{DynamicResource MenuTextBrush}"
                            BorderThickness="1,1,1,1">
                        <ScrollViewer x:Name="ScrollViewer"
                                      CanContentScroll="true"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                                                                    ResourceId=MenuScrollViewer}}">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            Margin="2,2,2,2"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </Controls:FXPopup>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource LayerChild1Brush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuTextBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource MessageFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource MessageFontWeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                                  MinWidth="17"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                              Margin="4,0,6,0"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Path x:Name="GlyphPanel"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  Data="{DynamicResource Checkmark}"
                                  Fill="{TemplateBinding Foreground}"
                                  FlowDirection="LeftToRight"
                                  Visibility="Hidden" />
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Header}"
                                              ContentSource="Header"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <TextBlock x:Name="InputGestureText"
                                       Grid.Column="2"
                                       Margin="5,2,0,2"
                                       DockPanel.Dock="Right"
                                       Text="{TemplateBinding InputGestureText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ButtonOverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource LayerChild1Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Padding" Value="6,3,6,3" />
                <Setter Property="Template" Value="{DynamicResource MenuItemTopLevelHeaderStyle}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Padding" Value="6,3,6,3" />
                <Setter Property="Template" Value="{DynamicResource MenuItemTopLevelItemStyle}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Padding" Value="0,2,0,2" />
                <Setter Property="Template" Value="{DynamicResource SubmenuHeaderStyle}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Padding" Value="0,2,0,2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  StatusBar  -->
    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource RecessedBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
    </Style>

    <!--  ToolTip  -->
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="Foreground" Value="{DynamicResource Text1Brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MessageFontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border x:Name="Bd"
                            Background="{DynamicResource PopUpBrush}"
                            BorderBrush="{DynamicResource Text1Brush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="4,2,4,2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Dialog Container  -->
    <Style x:Key="DialogRootContainer" TargetType="{x:Type Border}">
        <Style.Resources>
            <Style BasedOn="{StaticResource BaseTextBox}" TargetType="{x:Type TextBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisualStyle}" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisualStyle}" />
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource DialogBackgroundBrush}" />
        <Setter Property="Padding" Value="{DynamicResource LargeMargin}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Text1Brush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
    </Style>

</ResourceDictionary>